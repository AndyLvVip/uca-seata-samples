version '1.0.0-SNAPSHOT'

subprojects {

    apply plugin: 'java'
    apply plugin: 'pmd'

    group 'uca'

    sourceCompatibility = 1.8

    ext {
        springCloudVersion = 'Greenwich.SR1'
        springBootVersion = '2.1.3.RELEASE'
        seataVersion = '0.5.1'
        netty4Version = '4.1.24.Final'
        orgSpringframeworkSpringVersion = '2.5.6.SEC03'
        junitVersion = '4.12'
        dubboVersion = '2.7.0'
        fastjsonVersion = '1.2.54'
        configVersion = '1.2.1'
        slf4jApiVersion = '1.7.22'
        logbackClassicVersion = '1.1.6'
        commonsLangVersion = '2.6'
        commonsPool2Version = '2.4.2'
        cglibVersion = '3.1'
        aopallianceVersion = '1.0'
        zkclientVersion = '0.10'
        dubboRegistryNacosVersion = '0.0.2'
        springContextSupportVersion = '1.0.2'
        testngVersion = '6.4'
        springVersion = '5.1.3.RELEASE'
        mysqlConnectorVersion = '5.1.31'
        curatorVersion = '4.1.0'
        p3cPmdVersion = '1.3.6'
        springCloudAlibabaSeataVersion = '0.9.1.BUILD-SNAPSHOT'
    }

    repositories {
        maven { url 'http://192.168.63.195:8081/artifactory/maven-central/' }
        maven { url 'http://192.168.63.195:8081/artifactory/jcenter/' }
        maven { url 'http://192.168.63.195:8081/artifactory/spring-io-milestone/' }
        maven { url 'http://192.168.63.195:8081/artifactory/oss-sonatype/' }
        maven { url 'http://192.168.63.195:8081/artifactory/gradle-plugins/' }
        maven { url 'http://192.168.63.195:8081/artifactory/spring-snapshot/' }
    }

    dependencies {

        constraints {
            implementation "io.seata:seata-spring:${seataVersion}"
            implementation "io.netty:netty-all:${netty4Version}"
            implementation "com.alibaba:fastjson:${fastjsonVersion}"
            implementation "io.seata:seata-dubbo:${seataVersion}"
            implementation "com.typesafe:config:${configVersion}"
            implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
            implementation "ch.qos.logback:logback-classic:${logbackClassicVersion}"
            implementation "commons-lang:commons-lang:${commonsLangVersion}"
            implementation "org.apache.commons:commons-pool2:${commonsPool2Version}"
            implementation "org.apache.dubbo:dubbo:${dubboVersion}"
            implementation "cglib:cglib:${cglibVersion}"
            implementation "aopalliance:aopalliance:${aopallianceVersion}"
            implementation "com.101tec:zkclient:${zkclientVersion}"
            implementation "com.alibaba:dubbo-registry-nacos:${dubboRegistryNacosVersion}"
            implementation "com.alibaba.spring:spring-context-support:${springContextSupportVersion}"
            implementation "org.springframework:spring-jdbc:${springVersion}"
            implementation "org.springframework:spring-context:${springVersion}"
            implementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"
            implementation "org.apache.curator:curator-recipes:${curatorVersion}"
            pmd "com.alibaba.p3c:p3c-pmd:${p3cPmdVersion}"
            implementation "org.springframework.cloud:spring-cloud-alibaba-seata:${springCloudAlibabaSeataVersion}"
            implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

            testImplementation "junit:junit:${junitVersion}"
            testImplementation "org.testng:testng:${testngVersion}"
        }
        pmd "com.alibaba.p3c:p3c-pmd"

    }

    pmd {
        ignoreFailures = true
        rulePriority = 2
        ruleSets = [
                "rulesets/java/ali-comment.xml",
                "rulesets/java/ali-concurrent.xml",
                "rulesets/java/ali-constant.xml",
                "rulesets/java/ali-exception.xml",
                "rulesets/java/ali-flowcontrol.xml",
                "rulesets/java/ali-naming.xml",
                "rulesets/java/ali-oop.xml",
                "rulesets/java/ali-orm.xml",
                "rulesets/java/ali-other.xml",
                "rulesets/java/ali-set.xml"
        ]
    }
}
